name: Build and Push to the Docker Repository

on: 
  push:
    branches: 
      - main
    paths-ignore:
      - 'recipes/version.py'

jobs:

  bump-version:
    if: contains(github.event.head_commit.message, '[skip ci]') == false

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Create database
        run: |
          if [ ! -f db.sqlite3 ]; then
            touch db.sqlite3
          fi

      - name: Run migrations
        run: |
          source venv/bin/activate
          python3 manage.py makemigrations
          python manage.py migrate

      - name: Run tests
        run: |
          source venv/bin/activate
          python manage.py test

      - name: Get current version
        id: get_version
        run: |
          version=$(grep "__version__" recipes/version.py | cut -d'"' -f2)
          echo "Current version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: bump_version
        run: |
          old_version="${{ steps.get_version.outputs.version }}"
          IFS='.' read -r major minor patch <<< "$old_version"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "Bumping to $new_version"
          echo "__version__ = \"$new_version\"" > recipes/version.py
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Commit and push version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add recipes/version.py
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.new_version }} [skip ci]" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin main
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: mgrah/yum-book:latest

  # docker:
  #   needs: bump-version 
  #   runs-on: ubuntu-latest
    
  #   env:
  #     DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

  #   steps:

  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Get current version
  #       id: get_version
  #       run: |
  #         version=$(grep "__version__" recipes/version.py | cut -d'"' -f2)
  #         echo "Current version: $version"

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.12' 

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m venv venv
  #         source venv/bin/activate
  #         pip install -r requirements.txt

  #     - name: Create database
  #       run: |
  #         if [ ! -f db.sqlite3 ]; then
  #           touch db.sqlite3
  #         fi

  #     - name: Run migrations
  #       run: |
  #         source venv/bin/activate
  #         python3 manage.py makemigrations
  #         python manage.py migrate

  #     - name: Run tests
  #       run: |
  #         source venv/bin/activate
  #         python manage.py test

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         push: true
  #         tags: mgrah/yum-book:latest

apiVersion: batch/v1
kind: Job
metadata:
  name: create-superuser
spec:
  template:
    spec:
      containers:
        - name: create-superuser
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              python manage.py makemigrations &&
              python manage.py migrate &&
              python manage.py shell <<EOF
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(username='admin').exists():
    User.objects.create_superuser('admin', 'admin@example.com', 'yumpass')
EOF
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.user }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.password }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.db }}"
            - name: POSTGRES_HOST
              value: "{{ .Values.postgres.host }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.postgres.port }}"
      restartPolicy: OnFailure
  backoffLimit: 5


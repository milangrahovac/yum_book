apiVersion: batch/v1
kind: Job
metadata:
  name: create-superuser
  annotations:
    "helm.sh/resource-policy": keep
spec:
  template:
    spec:
      ttlSecondsAfterFinished: 300  # Delete 5 minutes after completion
      containers:
        - name: create-superuser-{{ now | unixEpoch }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        #   command: ["sh", "-c", "python manage.py shell < create_superuser.py"]
          args:
            - |
              python manage.py makemigrations &&
              python manage.py migrate &&
              python manage.py shell < /app/create_superuser.py

              python manage.py shell <<EOF
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(username='admin').exists():
User.objects.create_superuser('admin', 'admin@example.com', 'yumpass')
EOF
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.db | quote }}
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
      restartPolicy: Never
  backoffLimit: 5

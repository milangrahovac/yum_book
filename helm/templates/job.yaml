apiVersion: batch/v1
kind: Job
metadata:
  name: create-superuser-{{ now | unixEpoch }}
spec:
  template:
    spec:
      ttlSecondsAfterFinished: 300  # Delete 5 minutes after completion
      containers:
        - name: create-superuser-{{ now | unixEpoch }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.db | quote }}
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: DATABASE_URL
              value: "postgres://{{ .Values.postgres.user }}:{{ .Values.postgres.password }}@{{ .Values.postgres.host }}:{{ .Values.postgres.port }}/{{ .Values.postgres.db }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              python manage.py makemigrations && \
              python manage.py migrate && \
              python manage.py shell -c "
                from django.contrib.auth import get_user_model;
                User = get_user_model();
                if not User.objects.filter(username='admin').exists():
                  User.objects.create_superuser('admin', '', 'yumpass')"
      restartPolicy: Never
  backoffLimit: 5




apiVersion: batch/v1
kind: Job
metadata:
  name: create-superuser-{{ now | unixEpoch }}
spec:
  template:
    spec:
      ttlSecondsAfterFinished: 300
      containers:
        - name: create-superuser
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.db | quote }}
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: DATABASE_URL
              value: "postgres://{{ .Values.postgres.user }}:{{ .Values.postgres.password }}@{{ .Values.postgres.host }}:{{ .Values.postgres.port }}/{{ .Values.postgres.db }}"
            - name: DJANGO_SUPERUSER_USERNAME
              value: {{ .Values.superuser.username | quote }}
            - name: DJANGO_SUPERUSER_EMAIL
              value: {{ .Values.superuser.email | quote }}
            - name: DJANGO_SUPERUSER_PASSWORD
              value: {{ .Values.superuser.password | quote }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              python manage.py makemigrations && \
              python manage.py migrate && \
              python manage.py shell -c "
import os
from django.contrib.auth import get_user_model
User = get_user_model()
User.objects.filter(username=os.environ['DJANGO_SUPERUSER_USERNAME']).exists() or \
User.objects.create_superuser(os.environ['DJANGO_SUPERUSER_USERNAME'], os.environ['DJANGO_SUPERUSER_EMAIL'], os.environ['DJANGO_SUPERUSER_PASSWORD'])"
      restartPolicy: Never
  backoffLimit: 5
